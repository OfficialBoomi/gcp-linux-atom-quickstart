# Copyright 2022 Dell Boomi. All rights reserved.

{% set project = env["project"] %}
{% set deployment = env["deployment"] %}
{% set region = properties["region"] %}
{% set machineType = properties["machineType"] %}
{% set diskSizeGb = properties["diskSizeGb"] %}
{% set bootDiskType = properties["bootDiskType"] %}
{% set boomiUserEmailID = properties["boomiUserEmailID"] %}
{% set boomiAuthenticationType = properties["boomiAuthenticationType"] %}
{% set boomiPassword = properties["boomiPassword/boomiAPIToken"] %}
{% set boomiAccountID = properties["boomiAccountID"] %}
{% set AtomName = properties["AtomName"] %}


resources: 

- name: {{ deployment }}-enableApis
  type: enableapis.py
  properties:
    consumerId: {{ 'project:' + env['project'] }}
    apis:
      - name: cloudResourceManagerApi
        serviceName: cloudresourcemanager.googleapis.com
      - name: endpointsApi
        serviceName: endpoints.googleapis.com
      - name: iamApi
        serviceName: iam.googleapis.com
      - name: cloudfunctionApi
        serviceName: cloudfunctions.googleapis.com     
      - name: computeApi
        serviceName: compute.googleapis.com
      - name: deploymentmanagerApi
        serviceName: deploymentmanager.googleapis.com
      - name: cloudbuildApi
        serviceName: cloudbuild.googleapis.com
        
- name: {{ deployment }}-sa
  type: iam.v1.serviceAccount
  properties:
    accountId: {{ deployment }}-sa
    projectId: {{ project }}
    displayName: Service Account

- name: {{ deployment }}-iam-member
  type: iam.py
  properties:
    roles:
      - role: roles/compute.instanceAdmin
        members:
          - "serviceAccount:$(ref.{{ deployment }}-sa.email)"
          
      - role: roles/storage.admin
        members:
          - "serviceAccount:$(ref.{{ deployment }}-sa.email)"


- name: {{ deployment }}-network
  type: network.py
  properties:
    name: {{ deployment }}-network
    autoCreateSubnetworks: false
    subnetworks:
      - name: {{ deployment }}-{{ region }}-public-subnet
        region: {{ region }}
        ipCidrRange: 192.168.0.0/21
        privateIpGoogleAccess: true
        enableFlowLogs: false
     

- name: {{ deployment }}-firewall
  type: firewall.py
  properties:
    network: $(ref.{{ deployment }}-network.selfLink)
    rules:
      - name: {{ deployment }}-allow-ssh-to-bastion
        description: Allow SSH from anywhere to Bastion
        allowed:
          - IPProtocol: tcp
            ports:
              - "22"
              - "3389"
        direction: INGRESS
        sourceRanges:
          - 0.0.0.0/0
        targetTags:
          - bastion
      - name: {{ deployment }}-allow-http
        description: Allow HTTP/HTTPS from anywhere
        allowed:
          - IPProtocol: tcp
            ports:
              - "80"
        direction: INGRESS
        {% if properties.get("tcp80SourceRanges") %}
        sourceRanges:
          {% for source in properties["tcp80SourceRanges"].split(',') %}
          - '{{ source | trim }}'
          {% endfor %}
        {% else %}
        sourceRanges:
          - 0.0.0.0/0
        {% endif %}
      - name: {{ deployment }}-allow-https
        description: Allow HTTP/HTTPS from anywhere
        allowed:
          - IPProtocol: tcp
            ports:
              - "443"
        direction: INGRESS
        {% if properties.get("tcp443SourceRanges") %}
        sourceRanges:
          {% for source in properties["tcp443SourceRanges"].split(',') %}
          - '{{ source | trim }}'
          {% endfor %}
        {% else %}
        sourceRanges:
          - 0.0.0.0/0
        {% endif %}
      - name: {{ deployment }}-allow-icmp
        description: Allow ICMP from anywhere
        allowed:
          - IPProtocol: ICMP
        direction: INGRESS
        sourceRanges:
          - 0.0.0.0/0

- type: atom.py
  name: {{ env['deployment'] }}-atom
  properties:
    region: {{ region }}
    boomiUserEmailID : {{ boomiUserEmailID }}
    boomiAuthenticationType : {{ boomiAuthenticationType }}
    boomiPassword : {{ boomiPassword }}
    boomiAccountID : {{ boomiAccountID }}
    network: $(ref.{{ deployment }}-network.selfLink)
    publicSubnet: $(ref.{{ deployment }}-{{ region }}-public-subnet.selfLink)
    region: {{ region }}
    machineType: {{ machineType }}
    machineImage: rhel-cloud/global/images/family/rhel-7
    minSize: 1
    maxSize: 1
    serviceAccountEmail: $(ref.{{ deployment }}-sa.email)
    serviceAccountScopes:
      - https://www.googleapis.com/auth/compute
      - https://www.googleapis.com/auth/devstorage.read_only
      - https://www.googleapis.com/auth/logging.write
      - https://www.googleapis.com/auth/monitoring
      - https://www.googleapis.com/auth/cloud-platform
    tags:
      items:
        - bastion
    startupScript: |
      #!/bin/bash
      #### Log the execution to a file ####
      exec 3>&1 4>&2
      trap 'exec 2>&4 1>&3' 0 1 2 3 RETURN
      exec 1>/var/log/configure-bastion.log 2>&1
      sudo yum -y install java-1.8.0-openjdk
      sudo yum -y install wget
      wget -P /usr/local/boomi https://platform.boomi.com/atom/atom_install64.sh && chmod +x /usr/local/boomi/atom_install64.sh
      AuthType={{boomiAuthenticationType}}
      AuthType=$(echo "$AuthType" | tr '[:lower:]' '[:upper:]')
      if [ $AuthType = TOKEN ]
      then
        TOKEN="$(gsutil cat gs://{{ deployment }}-bucket/token.txt | head -1)"
        gsutil rm gs://{{ deployment }}-bucket/token.txt
        sudo /usr/local/boomi/atom_install64.sh -q console -VinstallToken="${TOKEN}" -VatomName={{AtomName}} -VaccountId={{boomiAccountID}} -dir "/opt/boomi/"        
      else
        sudo /usr/local/boomi/atom_install64.sh -q console -Vusername={{boomiUserEmailID}} -Vpassword={{boomiPassword}} -VatomName={{AtomName}} -VaccountId={{boomiAccountID}} -dir "/opt/boomi/"        
      fi
